COREPATH ?=../../../core
.DEFAULT_GOAL := all

include $(COREPATH)/../Makefile.defs

LIB_LDFLAGS  += $(module_ldflags)
CPPFLAGS += -I $(COREPATH)
CFLAGS   += -I $(COREPATH)
CFLAGS   += $(module_cflags)
CPPFLAGS += $(module_cflags)
CXXFLAGS += $(module_cflags)

app_module_dir = $(COREPATH)/lib

lib_name = $(plug_in_name).so
lib_full_name ?= $(app_module_dir)/$(lib_name)

module_conf_files =  $(wildcard etc/*.conf)
AUDIO_FILES=$(notdir $(wildcard wav/*.wav))
EXTRA_LIB_DIR?=lib/
EXTRA_LIB_FILES=$(notdir $(wildcard $(EXTRA_LIB_DIR)*))

srcs     = $(wildcard *.cpp)
hrds     = $(wildcard *.h)
objs     = $(srcs:.cpp=.o) 
depends  = $(srcs:.cpp=.d)

.PHONY: all
all: $(extra_target) $(lib_full_name)

.PHONY: module_package
module_package: $(extra_target) $(lib_name)

.PHONY: clean
clean: $(extra_clean)
	-@rm -f $(objs) $(depends) $(lib_name)

.PHONY: install
install: all $(extra_install)
	mkdir -p $(DESTDIR)$(lib-prefix)/$(lib-dir)/dsm
	if [ -f "$(lib_name)" ]; then \
	 $(INSTALL-TOUCH) $(DESTDIR)$(lib-prefix)/$(lib-dir)/dsm/; \
	 $(INSTALL-MODULES) $(lib_name) $(DESTDIR)$(lib-prefix)/$(lib-dir)/dsm/; \
	fi

.PHONY: install-cfg
install-cfg: 
	mkdir -p $(DESTDIR)$(cfg-target)
	-@for r in $(module_conf_files); do \
			echo installing $$r ;  \
			$(INSTALL-TOUCH) $(DESTDIR)$(cfg-target)$$r ; \
			sed -e "s#/usr/.*lib/sems/audio/#$(audio-target)#g" \
			-e "s#/usr/.*lib/sems/plug-in/#$(modules-target)#g" \
			-e "s#/usr/.*lib/sems/ivr/#$(lib-target)ivr/#g" \
			-e "s#/usr/.*lib/sems/dsm/#$(lib-target)dsm/#g" \
			-e "s#/usr/.*lib/sems/py_sems/#$(lib-target)py_sems/#g" \
			-e "s#/usr/.*etc/sems/#$(cfg-target)#g" \
			< $$r > $(DESTDIR)$(cfg-target)$$r; \
	done

$(DESTDIR)(audio-prefix)/$(audio-dir):
	mkdir -p $(DESTDIR)$(audio-prefix)/$(audio-dir)

.PHONY: $(plug_in_name)_audio
$(plug_in_name)_audio: $(DESTDIR)$(audio-prefix)/$(audio-dir)
	mkdir -p $(DESTDIR)$(audio-prefix)/$(audio-dir)$(plug_in_name)
	-@for f in $(AUDIO_FILES) ; do \
		if [ -n "wav/$$f" ]; then \
			$(INSTALL-TOUCH) $(DESTDIR)$(audio-prefix)/$(audio-dir)$(plug_in_name)/$$f; \
			$(INSTALL-AUDIO) wav/$$f $(DESTDIR)$(audio-prefix)/$(audio-dir)$(plug_in_name)/$$f; \
		fi ; \
	done

.PHONY: $(plug_in_name)_lib
$(plug_in_name)_lib: 
	mkdir -p $(DESTDIR)$(lib-prefix)/$(lib-dir)/$(plug_in_name)
	-@for f in $(EXTRA_LIB_FILES) ; do \
		if [ -n "$(EXTRA_LIB_DIR)/$$f" ]; then \
			$(INSTALL-TOUCH) $(DESTDIR)$(lib-prefix)/$(lib-dir)/$(plug_in_name)/$$f; \
			$(INSTALL-AUDIO) $(EXTRA_LIB_DIR)$$f $(DESTDIR)$(lib-prefix)/$(lib-dir)/$(plug_in_name)/$$f; \
		fi ; \
	done

-include $(depends)

%.o: %.cpp $(COREPATH)/../Makefile.defs
	$(CXX) -MMD $(CXXFLAGS) $(CPPFLAGS) -c $< -o $@

%.o: %.c $(COREPATH)/../Makefile.defs
	$(CC) -MMD $(CFLAGS) $(CPPFLAGS) -c $< -o $@

ifneq ($(lib_full_name),$(lib_name))
$(lib_full_name): $(lib_name)
	cp $(lib_name) $(lib_full_name)
endif

$(lib_name): $(objs) $(module_extra_objs) Makefile
	$(LD) -o $(lib_name) $(objs) $(module_extra_objs) $(LIB_LDFLAGS)
